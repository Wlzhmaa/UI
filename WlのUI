local lib = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PresetColor = Color3.fromRGB(44, 120, 224)
local CloseBind = Enum.KeyCode.RightControl

local CloudHub = Instance.new("ScreenGui")
CloudHub.Name = "CloudHub"
CloudHub.Parent = game.CoreGui
CloudHub.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

coroutine.wrap(
	function()
		while wait() do
			lib.RainbowColorValue = lib.RainbowColorValue + 1 / 255
			lib.HueSelectionPosition = lib.HueSelectionPosition + 1

			if lib.RainbowColorValue >= 1 then
				lib.RainbowColorValue = 0
			end

			if lib.HueSelectionPosition == 80 then
				lib.HueSelectionPosition = 0
			end
		end
	end
)()

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
					input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

function lib:Window(text, preset, closebind)
	CloseBind = closebind or Enum.KeyCode.RightControl
	PresetColor = preset or Color3.fromRGB(44, 120, 224)
	fs = false
	local Main = Instance.new("Frame")
	local TabHold = Instance.new("Frame")
	local TabHoldLayout = Instance.new("UIListLayout")
	local Title = Instance.new("TextLabel")
	local TabFolder = Instance.new("Folder")
	local DragFrame = Instance.new("Frame")

	Main.Name = "Main"
	Main.Parent = CloudHub
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Size = UDim2.new(0, 0, 0, 0)
	Main.ClipsDescendants = true
	Main.Visible = false

	TabHold.Name = "TabHold"
	TabHold.Parent = Main
	TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHold.BackgroundTransparency = 1.000
	TabHold.Position = UDim2.new(0.0339285731, 0, 0.147335425, 0)
	TabHold.Size = UDim2.new(0, 107, 0, 254)

	TabHoldLayout.Name = "TabHoldLayout"
	TabHoldLayout.Parent = TabHold
	TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabHoldLayout.Padding = UDim.new(0, 11)

	Title.Name = "Title"
	Title.Parent = Main
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.0339285731, 0, 0.0564263314, 0)
	Title.Size = UDim2.new(0, 200, 0, 23)
	Title.Font = Enum.Font.GothamSemibold
	Title.Text = text
	Title.TextColor3 = Color3.fromRGB(68, 68, 68)
	Title.TextSize = 12.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	DragFrame.Name = "DragFrame"
	DragFrame.Parent = Main
	DragFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DragFrame.BackgroundTransparency = 1.000
	DragFrame.Size = UDim2.new(0, 560, 0, 41)

	local LoadFrame = Instance.new("Frame")
	local Barload = Instance.new("Frame")
	local BarloadCorner = Instance.new("UICorner")
	local LoadText = Instance.new("TextLabel")
	local LoadTitle = Instance.new("TextLabel")

	LoadFrame.Name = "LoadFrame"
	LoadFrame.Parent = CloudHub
	LoadFrame.AnchorPoint = Vector2.new(0.5, 0.5)
	LoadFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	LoadFrame.BorderSizePixel = 0
	LoadFrame.ClipsDescendants = true
	LoadFrame.Position = UDim2.new(0.499739647, 0, 0.499451756, 0)
	LoadFrame.Size = UDim2.new(0, 0, 0, 0)

	Barload.Name = "Barload"
	Barload.Parent = LoadFrame
	Barload.BackgroundColor3 = Color3.fromRGB(44, 120, 224)
	Barload.Position = UDim2.new(0.0436137058, 0, 0.776658118, 0)
	Barload.Size = UDim2.new(0, 0, 0, 2)
	Barload.BackgroundTransparency = 1

	BarloadCorner.Name = "BarloadCorner"
	BarloadCorner.Parent = Barload

	LoadText.Name = "LoadText"
	LoadText.Parent = LoadFrame
	LoadText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	LoadText.BackgroundTransparency = 1.000
	LoadText.Position = UDim2.new(0.186915889, 0, 0.261682242, 0)
	LoadText.Size = UDim2.new(0, 200, 0, 50)
	LoadText.Font = Enum.Font.Gotham
	LoadText.TextColor3 = Color3.fromRGB(255, 255, 255)
	LoadText.TextSize = 18.000
	LoadText.TextTransparency = 1
	LoadText.Text = "等待加载..."

	LoadTitle.Name = "LoadTitle"
	LoadTitle.Parent = LoadFrame
	LoadTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	LoadTitle.BackgroundTransparency = 1.000
	LoadTitle.Position = UDim2.new(0.0432743616, 0, 0.1125011, 0)
	LoadTitle.Size = UDim2.new(0, 200, 0, 23)
	LoadTitle.Font = Enum.Font.GothamSemibold
	LoadTitle.Text = "Wl新脚本"
	LoadTitle.TextColor3 = Color3.fromRGB(68, 68, 68)
	LoadTitle.TextSize = 12.000
	LoadTitle.TextXAlignment = Enum.TextXAlignment.Left
	LoadTitle.TextTransparency = 1
	
	LoadFrame:TweenSize(UDim2.new(0, 321,0, 107), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
	
	wait(.6)
	
	TweenService:Create(
		Barload,
		TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
		{BackgroundTransparency = 0}
	):Play()
	TweenService:Create(
		LoadText,
		TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
		{TextTransparency = 0}
	):Play()
	TweenService:Create(
		LoadTitle,
		TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
		{TextTransparency = 0}
	):Play()
	
	wait(.6)
	
	Barload:TweenSize(UDim2.new(0, 50,0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
	LoadText.Text = "检查游戏..."
	
	wait(1)
	
	Barload:TweenSize(UDim2.new(0, 100,0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
	LoadText.Text = "获取数据..."
	
	wait(.5)

	Barload:TweenSize(UDim2.new(0, 150,0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
	LoadText.Text = "执行脚本中..."
	
	wait(.5)

	Barload:TweenSize(UDim2.new(0, 200,0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
	LoadText.Text = "加载中.."
	
	wait(.5)

	Barload:TweenSize(UDim2.new(0, 292,0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .3, true)
	LoadText.Text = "开始吧！"
	
	wait(2)
	

	TweenService:Create(
		Barload,
		TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
		{BackgroundTransparency = 1}
	):Play()
	TweenService:Create(
		LoadText,
		TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
		{TextTransparency = 1}
	):Play()
	TweenService:Create(
		LoadTitle,
		TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
		{TextTransparency = 1}
	):Play()

	wait(.6)
	
	LoadFrame:TweenSize(UDim2.new(0, 0,0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
	
	wait(.5)
	Main.Visible = true
	
	Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
	

	MakeDraggable(DragFrame, Main)
	
	local uitoggled = false
	UserInputService.InputBegan:Connect(
		function(io, p)
			if io.KeyCode == CloseBind then
				if uitoggled == false then
					Main:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					uitoggled = true
					wait(.5)
					CloudHub.Enabled = false
				else
					Main:TweenSize(UDim2.new(0, 560, 0, 319), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					CloudHub.Enabled = true
					uitoggled = false
				end
			end
		end
	)

	TabFolder.Name = "TabFolder"
	TabFolder.Parent = Main
	
	function lib:ChangePresetColor(toch)
		PresetColor = toch
	end
	
	function lib:Notification(texttitle,textdesc,textbtn)

		local NotificationHold = Instance.new("TextButton")
		local NotificationFrame = Instance.new("Frame")
		local OkayBtn = Instance.new("TextButton")
		local OkayBtnCorner = Instance.new("UICorner")
		local OkayBtnTitle = Instance.new("TextLabel")
		local NotificationTitle = Instance.new("TextLabel")
		local NotificationDesc = Instance.new("TextLabel")


		NotificationHold.Name = "NotificationHold"
		NotificationHold.Parent = Main
		NotificationHold.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		NotificationHold.BackgroundTransparency = 1.000
		NotificationHold.BorderSizePixel = 0
		NotificationHold.Size = UDim2.new(0, 560, 0, 319)
		NotificationHold.AutoButtonColor = false
		NotificationHold.Font = Enum.Font.SourceSans
		NotificationHold.Text = ""
		NotificationHold.TextColor3 = Color3.fromRGB(0, 0, 0)
		NotificationHold.TextSize = 14.000
		
		TweenService:Create(
			NotificationHold,
			TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
			{BackgroundTransparency = 0.7}
		):Play()
		wait(0.4)

		NotificationFrame.Name = "NotificationFrame"
		NotificationFrame.Parent = NotificationHold
		NotificationFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		NotificationFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		NotificationFrame.BorderSizePixel = 0
		NotificationFrame.ClipsDescendants = true
		NotificationFrame.Position = UDim2.new(0.5, 0, 0.498432577, 0)
		
		NotificationFrame:TweenSize(UDim2.new(0, 164,0, 193), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)

		OkayBtn.Name = "OkayBtn"
		OkayBtn.Parent = NotificationFrame
		OkayBtn.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
		OkayBtn.Position = UDim2.new(0.0609756112, 0, 0.720207274, 0)
		OkayBtn.Size = UDim2.new(0, 144, 0, 42)
		OkayBtn.AutoButtonColor = false
		OkayBtn.Font = Enum.Font.SourceSans
		OkayBtn.Text = ""
		OkayBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
		OkayBtn.TextSize = 14.000

		OkayBtnCorner.CornerRadius = UDim.new(0, 5)
		OkayBtnCorner.Name = "OkayBtnCorner"
		OkayBtnCorner.Parent = OkayBtn

		OkayBtnTitle.Name = "OkayBtnTitle"
		OkayBtnTitle.Parent = OkayBtn
		OkayBtnTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		OkayBtnTitle.BackgroundTransparency = 1.000
		OkayBtnTitle.Position = UDim2.new(0.0763888881, 0, 0, 0)
		OkayBtnTitle.Size = UDim2.new(0, 181, 0, 42)
		OkayBtnTitle.Font = Enum.Font.Gotham
		OkayBtnTitle.Text = textbtn
		OkayBtnTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		OkayBtnTitle.TextSize = 14.000
		OkayBtnTitle.TextXAlignment = Enum.TextXAlignment.Left

		NotificationTitle.Name = "NotificationTitle"
		NotificationTitle.Parent = NotificationFrame
		NotificationTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationTitle.BackgroundTransparency = 1.000
		NotificationTitle.Position = UDim2.new(0.0670731738, 0, 0.0829015523, 0)
		NotificationTitle.Size = UDim2.new(0, 143, 0, 26)
		NotificationTitle.Font = Enum.Font.Gotham
		NotificationTitle.Text = texttitle
		NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		NotificationTitle.TextSize = 18.000
		NotificationTitle.TextXAlignment = Enum.TextXAlignment.Left

		NotificationDesc.Name = "NotificationDesc"
		NotificationDesc.Parent = NotificationFrame
		NotificationDesc.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationDesc.BackgroundTransparency = 1.000
		NotificationDesc.Position = UDim2.new(0.0670000017, 0, 0.218999997, 0)
		NotificationDesc.Size = UDim2.new(0, 143, 0, 91)
		NotificationDesc.Font = Enum.Font.Gotham
		NotificationDesc.Text = textdesc
		NotificationDesc.TextColor3 = Color3.fromRGB(255, 255, 255)
		NotificationDesc.TextSize = 15.000
		NotificationDesc.TextWrapped = true
		NotificationDesc.TextXAlignment = Enum.TextXAlignment.Left
		NotificationDesc.TextYAlignment = Enum.TextYAlignment.Top
		
		OkayBtn.MouseEnter:Connect(function()
			TweenService:Create(
				OkayBtn,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{BackgroundColor3 = Color3.fromRGB(37,37,37)}
			):Play()
		end)

		OkayBtn.MouseLeave:Connect(function()
			TweenService:Create(
				OkayBtn,
				TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
			):Play()
		end)
		
		OkayBtn.MouseButton1Click:Connect(function()
			NotificationFrame:TweenSize(UDim2.new(0, 0,0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
		
			wait(0.4)
			
			TweenService:Create(
				NotificationHold,
				TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{BackgroundTransparency = 1}
			):Play()
			
			wait(.3)
			
			NotificationHold:Destroy()
		end)
	end
	local tabhold = {}
	function tabhold:Tab(text)
		local TabBtn = Instance.new("TextButton")
		local TabTitle = Instance.new("TextLabel")
		local TabBtnIndicator = Instance.new("Frame")
		local TabBtnIndicatorCorner = Instance.new("UICorner")

		TabBtn.Name = "TabBtn"
		TabBtn.Parent = TabHold
		TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabBtn.BackgroundTransparency = 1.000
		TabBtn.Size = UDim2.new(0, 107, 0, 21)
		TabBtn.Font = Enum.Font.SourceSans
		TabBtn.Text = ""
		TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
		TabBtn.TextSize = 14.000

		TabTitle.Name = "TabTitle"
		TabTitle.Parent = TabBtn
		TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabTitle.BackgroundTransparency = 1.000
		TabTitle.Size = UDim2.new(0, 107, 0, 21)
		TabTitle.Font = Enum.Font.Gotham
		TabTitle.Text = text
		TabTitle.TextColor3 = Color3.fromRGB(150, 150, 150)
		TabTitle.TextSize = 14.000
		TabTitle.TextXAlignment = Enum.TextXAlignment.Left

		TabBtnIndicator.Name = "TabBtnIndicator"
		TabBtnIndicator.Parent = TabBtn
		TabBtnIndicator.BackgroundColor3 = PresetColor
		TabBtnIndicator.BorderSizePixel = 0
		TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
		TabBtnIndicator.Size = UDim2.new(0, 0, 0, 2)

		TabBtnIndicatorCorner.Name = "TabBtnIndicatorCorner"
		TabBtnIndicatorCorner.Parent = TabBtnIndicator
		
		coroutine.wrap(
			function()
				while wait() do
					TabBtnIndicator.BackgroundColor3 = PresetColor      
				end
			end
		)()
		

		local Tab = Instance.new("ScrollingFrame")
		local TabLayout = Instance.new("UIListLayout")
		
		Tab.Name = "Tab"
		Tab.Parent = TabFolder
		Tab.Active = true
		Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Tab.BackgroundTransparency = 1.000
		Tab.BorderSizePixel = 0
		Tab.Position = UDim2.new(0.31400001, 0, 0.147, 0)
		Tab.Size = UDim2.new(0, 373, 0, 254)
		Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
		Tab.ScrollBarThickness = 3
		Tab.Visible = false
		
		TabLayout.Name = "TabLayout"
		TabLayout.Parent = Tab
		TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
		TabLayout.Padding = UDim.new(0, 6)
		
		if fs == false then
			fs = true
			TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
			TabTitle.TextColor3 = Color3.fromRGB(255,255,255)
			Tab.Visible = true
		end
		
		TabBtn.MouseButton1Click:Connect(function()
			for i, v in next, TabFolder:GetChildren() do
				if v.Name == "Tab" then
					v.Visible = false
				end
				Tab.Visible = true
			end
			for i, v in next, TabHold:GetChildren() do
				if v.Name == "TabBtn" then
					v.TabBtnIndicator:TweenSize(UDim2.new(0, 0, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
					TabBtnIndicator:TweenSize(UDim2.new(0, 13, 0, 2), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
					TweenService:Create(
						v.TabTitle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(150,150,150)}
					):Play()
					TweenService:Create(
						TabTitle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{TextColor3 = Color3.fromRGB(255,255,255)}
					):Play()
				end
			end
		end)
		local tabcontent = {}
		function tabcontent:Button(text, callback)
			local Button = Instance.new("TextButton")
			local ButtonCorner = Instance.new("UICorner")
			local ButtonTitle = Instance.new("TextLabel")

			Button.Name = "Button"
			Button.Parent = Tab
			Button.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Button.Size = UDim2.new(0, 363, 0, 42)
			Button.AutoButtonColor = false
			Button.Font = Enum.Font.SourceSans
			Button.Text = ""
			Button.TextColor3 = Color3.fromRGB(0, 0, 0)
			Button.TextSize = 14.000

			ButtonCorner.CornerRadius = UDim.new(0, 5)
			ButtonCorner.Name = "ButtonCorner"
			ButtonCorner.Parent = Button

			ButtonTitle.Name = "ButtonTitle"
			ButtonTitle.Parent = Button
			ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ButtonTitle.BackgroundTransparency = 1.000
			ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
			ButtonTitle.Font = Enum.Font.Gotham
			ButtonTitle.Text = text
			ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			ButtonTitle.TextSize = 14.000
			ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
			
			Button.MouseEnter:Connect(function()
				TweenService:Create(
					Button,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(37,37,37)}
				):Play()
			end)
			
			Button.MouseLeave:Connect(function()
				TweenService:Create(
					Button,
					TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
				):Play()
			end)
			
			Button.MouseButton1Click:Connect(function()
                pcall(callback)
			end)
			
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Toggle(text, defaults, callback)
			local toggled = false

			local Toggle = Instance.new("TextButton")
			local ToggleCorner = Instance.new("UICorner")
			local ToggleTitle = Instance.new("TextLabel")
			local FrameToggle1 = Instance.new("Frame")
			local FrameToggle1Corner = Instance.new("UICorner")
			local FrameToggle2 = Instance.new("Frame")
			local FrameToggle2Corner = Instance.new("UICorner")
			local FrameToggle3 = Instance.new("Frame")
			local FrameToggle3Corner = Instance.new("UICorner")
			local FrameToggleCircle = Instance.new("Frame")
			local FrameToggleCircleCorner = Instance.new("UICorner")


			Toggle.Name = "Toggle"
			Toggle.Parent = Tab
			Toggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Toggle.Position = UDim2.new(0.215625003, 0, 0.446271926, 0)
			Toggle.Size = UDim2.new(0, 363, 0, 42)
			Toggle.AutoButtonColor = false
			Toggle.Font = Enum.Font.SourceSans
			Toggle.Text = ""
			Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			Toggle.TextSize = 14.000

			ToggleCorner.CornerRadius = UDim.new(0, 5)
			ToggleCorner.Name = "ToggleCorner"
			ToggleCorner.Parent = Toggle

			ToggleTitle.Name = "ToggleTitle"
			ToggleTitle.Parent = Toggle
			ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleTitle.BackgroundTransparency = 1.000
			ToggleTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			ToggleTitle.Size = UDim2.new(0, 187, 0, 42)
			ToggleTitle.Font = Enum.Font.Gotham
			ToggleTitle.Text = text
			ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			ToggleTitle.TextSize = 14.000
			ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

			FrameToggle1.Name = "FrameToggle1"
			FrameToggle1.Parent = Toggle
			FrameToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			FrameToggle1.Position = UDim2.new(0.859504104, 0, 0.285714298, 0)
			FrameToggle1.Size = UDim2.new(0, 37, 0, 18)

			FrameToggle1Corner.Name = "FrameToggle1Corner"
			FrameToggle1Corner.Parent = FrameToggle1

			FrameToggle2.Name = "FrameToggle2"
			FrameToggle2.Parent = FrameToggle1
			FrameToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			FrameToggle2.Position = UDim2.new(0.0489999987, 0, 0.0930000022, 0)
			FrameToggle2.Size = UDim2.new(0, 33, 0, 14)

			FrameToggle2Corner.Name = "FrameToggle2Corner"
			FrameToggle2Corner.Parent = FrameToggle2

			FrameToggle3.Name = "FrameToggle3"
			FrameToggle3.Parent = FrameToggle1
			FrameToggle3.BackgroundColor3 = PresetColor
			FrameToggle3.BackgroundTransparency = 1.000
			FrameToggle3.Size = UDim2.new(0, 37, 0, 18)

			FrameToggle3Corner.Name = "FrameToggle3Corner"
			FrameToggle3Corner.Parent = FrameToggle3

			FrameToggleCircle.Name = "FrameToggleCircle"
			FrameToggleCircle.Parent = FrameToggle1
			FrameToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			FrameToggleCircle.Position = UDim2.new(0.127000004, 0, 0.222000003, 0)
			FrameToggleCircle.Size = UDim2.new(0, 10, 0, 10)

			FrameToggleCircleCorner.Name = "FrameToggleCircleCorner"
			FrameToggleCircleCorner.Parent = FrameToggleCircle
			
			coroutine.wrap(
				function()
					while wait() do
						FrameToggle3.BackgroundColor3 = PresetColor   
					end
				end
			)()
		
			
			
			
			Toggle.MouseButton1Click:Connect(function()
				if toggled == false then
					TweenService:Create(
						Toggle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(37,37,37)}
					):Play()
					TweenService:Create(
						FrameToggle1,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						FrameToggle2,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						FrameToggle3,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						FrameToggleCircle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(255,255,255)}
					):Play()
					FrameToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222000003, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
				else
					TweenService:Create(
						Toggle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(34,34,34)}
					):Play()
					TweenService:Create(
						FrameToggle1,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						FrameToggle2,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 0}
					):Play()
					TweenService:Create(
						FrameToggle3,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundTransparency = 1}
					):Play()
					TweenService:Create(
						FrameToggleCircle,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(50,50,50)}
					):Play()
					FrameToggleCircle:TweenPosition(UDim2.new(0.127000004, 0, 0.222000003, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
				end
				toggled = not toggled
				pcall(callback, toggled)
			end)
			
			if defaults == true then
				TweenService:Create(
					Toggle,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(37,37,37)}
				):Play()
				TweenService:Create(
					FrameToggle1,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				TweenService:Create(
					FrameToggle2,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				TweenService:Create(
					FrameToggle3,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 0}
				):Play()
				TweenService:Create(
					FrameToggleCircle,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				FrameToggleCircle:TweenPosition(UDim2.new(0.587, 0, 0.222000003, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .2, true)
				toggled = not toggled
			end
			
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Slider(text, min,max,start,callback)
			local dragging = false
			local Slider = Instance.new("TextButton")
			local SliderCorner = Instance.new("UICorner")
			local SliderTitle = Instance.new("TextLabel")
			local SliderValue = Instance.new("TextLabel")
			local SlideFrame = Instance.new("Frame")
			local CurrentValueFrame = Instance.new("Frame")
			local SlideCircle = Instance.new("ImageButton")

			Slider.Name = "Slider"
			Slider.Parent = Tab
			Slider.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Slider.Position = UDim2.new(-0.48035714, 0, -0.570532918, 0)
			Slider.Size = UDim2.new(0, 363, 0, 60)
			Slider.AutoButtonColor = false
			Slider.Font = Enum.Font.SourceSans
			Slider.Text = ""
			Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
			Slider.TextSize = 14.000

			SliderCorner.CornerRadius = UDim.new(0, 5)
			SliderCorner.Name = "SliderCorner"
			SliderCorner.Parent = Slider

			SliderTitle.Name = "SliderTitle"
			SliderTitle.Parent = Slider
			SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderTitle.BackgroundTransparency = 1.000
			SliderTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			SliderTitle.Size = UDim2.new(0, 187, 0, 42)
			SliderTitle.Font = Enum.Font.Gotham
			SliderTitle.Text = "Slider"
			SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderTitle.TextSize = 14.000
			SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

			SliderValue.Name = "SliderValue"
			SliderValue.Parent = Slider
			SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.BackgroundTransparency = 1.000
			SliderValue.Position = UDim2.new(0.0358126722, 0, 0, 0)
			SliderValue.Size = UDim2.new(0, 335, 0, 42)
			SliderValue.Font = Enum.Font.Gotham
			SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
			SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.TextSize = 14.000
			SliderValue.TextXAlignment = Enum.TextXAlignment.Right

			SlideFrame.Name = "SlideFrame"
			SlideFrame.Parent = Slider
			SlideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			SlideFrame.BorderSizePixel = 0
			SlideFrame.Position = UDim2.new(0.0342647657, 0, 0.686091602, 0)
			SlideFrame.Size = UDim2.new(0, 335, 0, 3)

			CurrentValueFrame.Name = "CurrentValueFrame"
			CurrentValueFrame.Parent = SlideFrame
			CurrentValueFrame.BackgroundColor3 = PresetColor
			CurrentValueFrame.BorderSizePixel = 0
			CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

			SlideCircle.Name = "SlideCircle"
			SlideCircle.Parent = SlideFrame
			SlideCircle.BackgroundColor3 = PresetColor
			SlideCircle.BackgroundTransparency = 1.000
			SlideCircle.Position = UDim2.new((start or 0)/max, -6,-1.30499995, 0)
			SlideCircle.Size = UDim2.new(0, 11, 0, 11)
			SlideCircle.Image = "rbxassetid://3570695787"
			SlideCircle.ImageColor3 = PresetColor
			
			coroutine.wrap(
				function()
					while wait() do
						CurrentValueFrame.BackgroundColor3 = PresetColor
						SlideCircle.ImageColor3 = PresetColor
					end
				end
			)()
			
			local function move(input)
				local pos =
					UDim2.new(
						math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
						-6,
						-1.30499995,
						0
					)
				local pos1 =
					UDim2.new(
						math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
						0,
						0,
						3
					)
				CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
				SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
				local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
				SliderValue.Text = tostring(value)
				pcall(callback, value)
			end
			SlideCircle.InputBegan:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = true
					end
				end
			)
			SlideCircle.InputEnded:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = false
					end
				end
			)
			game:GetService("UserInputService").InputChanged:Connect(
			function(input)
				if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					move(input)
				end
			end
			)
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Dropdown(text, list, callback)
			local droptog = false
			local framesize = 0
			local itemcount = 0
			
			local Dropdown = Instance.new("Frame")
			local DropdownCorner = Instance.new("UICorner")
			local DropdownBtn = Instance.new("TextButton")
			local DropdownTitle = Instance.new("TextLabel")
			local ArrowImg = Instance.new("ImageLabel")
			local DropItemHolder = Instance.new("ScrollingFrame")
			local DropLayout = Instance.new("UIListLayout")

			Dropdown.Name = "Dropdown"
			Dropdown.Parent = Tab
			Dropdown.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Dropdown.ClipsDescendants = true
			Dropdown.Position = UDim2.new(-0.541071415, 0, -0.532915354, 0)
			Dropdown.Size = UDim2.new(0, 363, 0, 42)

			DropdownCorner.CornerRadius = UDim.new(0, 5)
			DropdownCorner.Name = "DropdownCorner"
			DropdownCorner.Parent = Dropdown

			DropdownBtn.Name = "DropdownBtn"
			DropdownBtn.Parent = Dropdown
			DropdownBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			DropdownBtn.BackgroundTransparency = 1.000
			DropdownBtn.Size = UDim2.new(0, 363, 0, 42)
			DropdownBtn.Font = Enum.Font.SourceSans
			DropdownBtn.Text = ""
			DropdownBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
			DropdownBtn.TextSize = 14.000

			DropdownTitle.Name = "DropdownTitle"
	
